import pool from '../config/database.js';

async function addBarPizzaCategories() {
  try {
    console.log('üçπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –±–∞—Ä–∞ –∏ –ø–∏—Ü—Ü—ã...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const existingCheck = await pool.query(
      "SELECT id FROM categories WHERE name_ru IN ('–ë–∞—Ä', '–ü–∏—Ü—Ü–∞')"
    );

    if (existingCheck.rows.length > 0) {
      console.log('‚ö†Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ë–∞—Ä" –∏/–∏–ª–∏ "–ü–∏—Ü—Ü–∞" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const allCategories = await pool.query(
        'SELECT id, name_ru, name_en, name_kk, display_order FROM categories ORDER BY display_order'
      );
      console.log('\nüìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:');
      allCategories.rows.forEach(cat => {
        console.log(`  ${cat.display_order}. ${cat.name_ru} (${cat.name_en} / ${cat.name_kk})`);
      });
      
      process.exit(0);
    }

    // –ü–æ–ª—É—á–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π display_order
    const maxOrderResult = await pool.query(
      'SELECT MAX(display_order) as max_order FROM categories'
    );
    const nextOrder = (maxOrderResult.rows[0].max_order || 0) + 1;

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ë–∞—Ä"
    const barResult = await pool.query(
      `INSERT INTO categories (name_ru, name_en, name_kk, display_order) 
       VALUES ($1, $2, $3, $4) 
       RETURNING id`,
      ['–ë–∞—Ä', 'Bar', '–ë–∞—Ä', nextOrder]
    );
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ë–∞—Ä" (ID: ${barResult.rows[0].id})`);

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ü–∏—Ü—Ü–∞"
    const pizzaResult = await pool.query(
      `INSERT INTO categories (name_ru, name_en, name_kk, display_order) 
       VALUES ($1, $2, $3, $4) 
       RETURNING id`,
      ['–ü–∏—Ü—Ü–∞', 'Pizza', '–ü–∏—Ü—Ü–∞', nextOrder + 1]
    );
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ü–∏—Ü—Ü–∞" (ID: ${pizzaResult.rows[0].id})`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const allCategories = await pool.query(
      'SELECT id, name_ru, name_en, name_kk, display_order FROM categories ORDER BY display_order'
    );
    
    console.log('\nüìã –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:');
    allCategories.rows.forEach(cat => {
      console.log(`  ${cat.display_order}. ${cat.name_ru} (${cat.name_en} / ${cat.name_kk}) - ID: ${cat.id}`);
    });

    console.log('\n‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
    console.log('\nüí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–ª—é–¥–∞ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:');
    console.log('   http://localhost:5173/admin/dashboard');
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
    process.exit(1);
  }
}

addBarPizzaCategories();
