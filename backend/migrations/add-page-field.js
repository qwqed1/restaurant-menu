import pool from '../config/database.js';

async function addPageField() {
  try {
    console.log('üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è "page" –≤ —Ç–∞–±–ª–∏—Ü—É categories...');

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ page
    await pool.query(`
      ALTER TABLE categories 
      ADD COLUMN IF NOT EXISTS page VARCHAR(50) DEFAULT 'kitchen'
    `);
    console.log('‚úÖ –ü–æ–ª–µ "page" –¥–æ–±–∞–≤–ª–µ–Ω–æ');

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    
    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫—É—Ö–Ω–∏ (display_order 1-12)
    await pool.query(`
      UPDATE categories 
      SET page = 'kitchen' 
      WHERE display_order >= 1 AND display_order <= 12
    `);
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫—É—Ö–Ω–∏: page = "kitchen"');

    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–∞—Ä–∞ (–ü—Ä–æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏, –õ–∏–º–æ–Ω–∞–¥—ã, –ß–∞–∏)
    await pool.query(`
      UPDATE categories 
      SET page = 'bar' 
      WHERE name_ru IN ('–ü—Ä–æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏', '–õ–∏–º–æ–Ω–∞–¥—ã', '–ß–∞–∏')
    `);
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–∞—Ä–∞: page = "bar"');

    // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–∏—Ü—Ü—ã
    await pool.query(`
      UPDATE categories 
      SET page = 'pizza' 
      WHERE name_ru = '–ü–∏—Ü—Ü–∞'
    `);
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–∏—Ü—Ü—ã: page = "pizza"');

    // –ö–∞—Ç–µ–≥–æ—Ä–∏—è "–ë–∞—Ä" (—Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è) - —Å–∫—Ä—ã–≤–∞–µ–º –µ—ë
    await pool.query(`
      UPDATE categories 
      SET page = 'hidden' 
      WHERE name_ru = '–ë–∞—Ä'
    `);
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "–ë–∞—Ä" (—Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è): page = "hidden"');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const allCategories = await pool.query(
      'SELECT id, name_ru, display_order, page FROM categories ORDER BY display_order'
    );
    
    console.log('\nüìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:');
    allCategories.rows.forEach(cat => {
      console.log(`  ${cat.display_order}. ${cat.name_ru} - page: "${cat.page}" (ID: ${cat.id})`);
    });

    console.log('\n‚úÖ –ü–æ–ª–µ "page" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!');
    console.log('\nüí° –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É–∫–∞–∑—ã–≤–∞–π—Ç–µ:');
    console.log('   - page = "kitchen" –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫—É—Ö–Ω–∏');
    console.log('   - page = "bar" –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±–∞—Ä–∞');
    console.log('   - page = "pizza" –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–∏—Ü—Ü—ã');
    console.log('   - page = "hidden" –¥–ª—è —Å–∫—Ä—ã—Ç—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è:', error);
    process.exit(1);
  }
}

addPageField();
