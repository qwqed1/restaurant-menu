import pool from '../config/database.js';

async function restoreBarCategories() {
  try {
    console.log('üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ë–∞—Ä–∞...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ë–∞—Ä–∞
    const existingCheck = await pool.query(
      "SELECT id, name_ru FROM categories WHERE name_ru IN ('–ë–∞—Ä', '–ü–∏—Ü—Ü–∞', '–ü—Ä–æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏', '–õ–∏–º–æ–Ω–∞–¥—ã', '–ß–∞–∏')"
    );

    if (existingCheck.rows.length > 0) {
      console.log('\n‚ö†Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ë–∞—Ä–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç:');
      existingCheck.rows.forEach(cat => console.log(`  - ${cat.name_ru} (ID: ${cat.id})`));
      process.exit(0);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ë–∞—Ä–∞
    const barCategories = [
      { name_ru: '–ë–∞—Ä', name_en: 'Bar', name_kk: '–ë–∞—Ä', order: 13 },
      { name_ru: '–ü–∏—Ü—Ü–∞', name_en: 'Pizza', name_kk: '–ü–∏—Ü—Ü–∞', order: 14 },
      { name_ru: '–ü—Ä–æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏', name_en: 'Soft Drinks', name_kk: '–°–∞–ª“õ—ã–Ω —Å—É—Å—ã–Ω–¥–∞—Ä', order: 15 },
      { name_ru: '–õ–∏–º–æ–Ω–∞–¥—ã', name_en: 'Lemonades', name_kk: '–õ–∏–º–æ–Ω–∞–¥—Ç–∞—Ä', order: 16 },
      { name_ru: '–ß–∞–∏', name_en: 'Teas', name_kk: '–®–∞–π–ª–∞—Ä', order: 17 }
    ];

    console.log('\n‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ë–∞—Ä–∞...');
    for (const cat of barCategories) {
      await pool.query(
        `INSERT INTO categories (name_ru, name_en, name_kk, display_order) 
         VALUES ($1, $2, $3, $4)`,
        [cat.name_ru, cat.name_en, cat.name_kk, cat.order]
      );
      console.log(`  ‚úÖ ${cat.order}. ${cat.name_ru}`);
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const allCategories = await pool.query(
      'SELECT id, name_ru, name_en, name_kk, display_order FROM categories ORDER BY display_order'
    );
    
    console.log('\nüìã –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:');
    allCategories.rows.forEach(cat => {
      console.log(`  ${cat.display_order}. ${cat.name_ru} (${cat.name_en} / ${cat.name_kk}) - ID: ${cat.id}`);
    });

    console.log('\n‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ë–∞—Ä–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!');
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
    process.exit(1);
  }
}

restoreBarCategories();
