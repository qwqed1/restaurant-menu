╔══════════════════════════════════════════════════════════════════╗
║                  ДЕПЛОЙ НА RAILWAY - 5 МИНУТ                     ║
║              Пошаговая инструкция на русском                     ║
╚══════════════════════════════════════════════════════════════════╝


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ШАГ 1: ПОДГОТОВКА (если еще не сделано)                      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

1. Убедитесь что код в GitHub:
   
   git add .
   git commit -m "Ready for Railway"
   git push


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ШАГ 2: СОЗДАНИЕ ПРОЕКТА НА RAILWAY                           ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

1. Откройте: https://railway.app
2. Нажмите "Login" → войдите через GitHub
3. Нажмите "New Project"
4. Выберите "Deploy from GitHub repo"
5. Найдите и выберите репозиторий "Halal hail/restaurant-menu"
6. Дождитесь начала деплоя (1-2 минуты)


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ШАГ 3: ДОБАВЛЕНИЕ БАЗЫ ДАННЫХ POSTGRESQL                     ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

1. В вашем проекте нажмите "+ New"
2. Выберите "Database"
3. Выберите "Add PostgreSQL"
4. Дождитесь создания базы (1-2 минуты)
5. Railway автоматически свяжет БД с вашим сервисом


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ШАГ 4: НАСТРОЙКА ПЕРЕМЕННЫХ ОКРУЖЕНИЯ                        ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

1. Кликните на ваш сервис (backend)
2. Откройте вкладку "Variables" в боковом меню
3. Нажмите "New Variable"
4. Добавьте первую переменную:
   
   Variable Name:  NODE_ENV
   Variable Value: production
   
5. Нажмите "Add" или Enter
6. Добавьте вторую переменную:
   
   Variable Name:  JWT_SECRET
   Variable Value: [сгенерируйте ниже]

   КАК СГЕНЕРИРОВАТЬ JWT_SECRET:
   
   Вариант А - В командной строке:
   node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
   
   Вариант Б - Любая случайная строка минимум 32 символа:
   myVerySecureJWTSecret2024!@#$%^&*()_+abcdef1234567890

7. Нажмите "Add"
8. Railway автоматически перезапустит сервис


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ШАГ 5: ИНИЦИАЛИЗАЦИЯ БАЗЫ ДАННЫХ                             ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

ВАРИАНТ A - Через Railway CLI (Рекомендуется):

1. Установите Railway CLI:
   npm install -g @railway/cli

2. Войдите в аккаунт:
   railway login
   (откроется браузер для авторизации)

3. Подключитесь к проекту:
   railway link
   (выберите ваш проект из списка)

4. Запустите миграции:
   railway run npm run init-postgres
   railway run npm run migrate-localization
   railway run npm run fill-translations

5. Готово! База данных инициализирована.


ВАРИАНТ Б - Через Railway Dashboard (если CLI не работает):

1. Откройте ваш сервис в Railway
2. Перейдите в "Settings" → "Deploy"
3. Найдите "Custom Start Command"
4. Временно измените на:
   cd backend && npm run railway-init && npm start

5. Нажмите "Deploy" для перезапуска
6. Дождитесь завершения (проверьте логи)
7. Верните обратно команду:
   cd backend && npm start

8. Сохраните изменения


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ШАГ 6: ПРОВЕРКА РАБОТОСПОСОБНОСТИ                            ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

1. Найдите URL вашего приложения:
   - В Railway Dashboard → ваш сервис
   - Скопируйте URL (например: https://your-app.railway.app)

2. Откройте в браузере:
   https://your-app.railway.app/api/health
   
   Должно вернуть:
   {"status":"healthy","timestamp":"...","database":"PostgreSQL"}

3. Проверьте категории:
   https://your-app.railway.app/api/categories
   
   Должен вернуть массив категорий

4. Проверьте блюда:
   https://your-app.railway.app/api/dishes
   
   Должен вернуть массив блюд


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ШАГ 7: ПОДКЛЮЧЕНИЕ FRONTEND                                  ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

1. Создайте файл .env в корне frontend проекта:
   
   VITE_API_URL=https://your-app.railway.app
   VITE_USE_API=true

2. Замените "your-app" на ваш реальный URL

3. Перезапустите frontend:
   npm run dev

4. Проверьте что данные загружаются из Railway API


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  🎉 ГОТОВО! ПРИЛОЖЕНИЕ РАЗВЕРНУТО!                            ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

✅ Backend API работает на Railway
✅ PostgreSQL база данных настроена
✅ Все таблицы созданы и заполнены
✅ Админ панель доступна

Ваш API: https://your-app.railway.app/api
Админ логин: admin / admin123 (СМЕНИТЕ ПАРОЛЬ!)


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ВАЖНЫЕ ЗАМЕЧАНИЯ                                             ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

⚠️  ОБЯЗАТЕЛЬНО смените дефолтный пароль админа!
⚠️  Не коммитьте .env файлы в Git!
⚠️  JWT_SECRET должен быть уникальным и секретным!
⚠️  Запускайте миграции только ОДИН раз!

✅  Railway автоматически деплоит при каждом git push
✅  SSL сертификат настраивается автоматически
✅  База данных автоматически бэкапится


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ПОЛЕЗНЫЕ КОМАНДЫ                                             ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

# Просмотр логов в реальном времени
railway logs

# Подключение к PostgreSQL
railway connect postgres

# Запуск команд в production окружении
railway run <команда>

# Просмотр всех переменных окружения
railway variables

# Перезапуск сервиса
railway up --detach


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ЧТО-ТО НЕ РАБОТАЕТ?                                          ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

1. Проверьте логи:
   Railway Dashboard → Deployments → View Logs

2. Проверьте переменные окружения:
   Railway Dashboard → Variables

3. Убедитесь что PostgreSQL запущен:
   Railway Dashboard → PostgreSQL сервис должен быть Active

4. Прочитайте подробную инструкцию:
   Откройте файл RAILWAY_DEPLOY.md

5. Используйте чеклист:
   Откройте файл DEPLOY_CHECKLIST.md


┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃  ДОПОЛНИТЕЛЬНЫЕ ФАЙЛЫ                                         ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

📄 README.md                  - Общая документация проекта
📄 RAILWAY_DEPLOY.md          - Подробная инструкция по деплою
📄 DEPLOY_CHECKLIST.md        - Чеклист для деплоя
📄 QUICK_START.md             - Быстрый старт (на английском)
📄 RAILWAY_ENV_TEMPLATE.txt   - Шаблон переменных окружения
📄 RAILWAY_FILES_SUMMARY.md   - Список всех созданных файлов


╔══════════════════════════════════════════════════════════════════╗
║                    УДАЧНОГО ДЕПЛОЯ! 🚀                           ║
╚══════════════════════════════════════════════════════════════════╝
